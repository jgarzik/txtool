0 info it worked if it ends with ok
1 verbose cli [ 'node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@1.1.65
3 info using node@v0.8.14
4 verbose publish [ '.' ]
5 verbose read json /Users/spair/projects/node_modules/txtool/package.json
6 verbose cache add [ '.', null ]
7 silly cache add name=undefined spec="." args=[".",null]
8 verbose parsed url { pathname: '.', path: '.', href: '.' }
9 silly lockFile 3a52ce78- .
10 verbose lock . /Users/spair/.npm/3a52ce78-.lock
11 verbose read json package.json
12 verbose tar pack [ '/var/folders/1k/mp1bh5jj58j_712v86pkcs400000gn/T/npm-9779/1372900575752-0.48015642911195755/tmp.tgz',
12 verbose tar pack   '.' ]
13 verbose tarball /var/folders/1k/mp1bh5jj58j_712v86pkcs400000gn/T/npm-9779/1372900575752-0.48015642911195755/tmp.tgz
14 verbose folder .
15 info prepublish txtool@0.1.3
16 silly lockFile 0e5720d7-5752-0-48015642911195755-tmp-tgz /var/folders/1k/mp1bh5jj58j_712v86pkcs400000gn/T/npm-9779/1372900575752-0.48015642911195755/tmp.tgz
17 verbose lock /var/folders/1k/mp1bh5jj58j_712v86pkcs400000gn/T/npm-9779/1372900575752-0.48015642911195755/tmp.tgz /Users/spair/.npm/0e5720d7-5752-0-48015642911195755-tmp-tgz.lock
18 silly lockFile 0e5720d7-5752-0-48015642911195755-tmp-tgz /var/folders/1k/mp1bh5jj58j_712v86pkcs400000gn/T/npm-9779/1372900575752-0.48015642911195755/tmp.tgz
19 verbose tar unpack /var/folders/1k/mp1bh5jj58j_712v86pkcs400000gn/T/npm-9779/1372900575752-0.48015642911195755/tmp.tgz
20 silly lockFile ddfed6cd-5752-0-48015642911195755-package /var/folders/1k/mp1bh5jj58j_712v86pkcs400000gn/T/npm-9779/1372900575752-0.48015642911195755/package
21 verbose lock /var/folders/1k/mp1bh5jj58j_712v86pkcs400000gn/T/npm-9779/1372900575752-0.48015642911195755/package /Users/spair/.npm/ddfed6cd-5752-0-48015642911195755-package.lock
22 silly gunzTarPerm modes [ '755', '644' ]
23 silly gunzTarPerm extractEntry package.json
24 silly gunzTarPerm extractEntry .npmignore
25 silly gunzTarPerm extractEntry README
26 silly gunzTarPerm extractEntry bin/txtool
27 silly gunzTarPerm extractEntry examples/multisig.txt
28 silly gunzTarPerm extractEntry examples/tx-signing.txt
29 silly gunzTarPerm extractEntry LICENSE.txt
30 silly gunzTarPerm extractEntry TODO
31 verbose read json /var/folders/1k/mp1bh5jj58j_712v86pkcs400000gn/T/npm-9779/1372900575752-0.48015642911195755/package/package.json
32 silly lockFile ddfed6cd-5752-0-48015642911195755-package /var/folders/1k/mp1bh5jj58j_712v86pkcs400000gn/T/npm-9779/1372900575752-0.48015642911195755/package
33 verbose from cache /var/folders/1k/mp1bh5jj58j_712v86pkcs400000gn/T/npm-9779/1372900575752-0.48015642911195755/package/package.json
34 verbose tar pack [ '/Users/spair/.npm/txtool/0.1.3/package.tgz',
34 verbose tar pack   '/var/folders/1k/mp1bh5jj58j_712v86pkcs400000gn/T/npm-9779/1372900575752-0.48015642911195755/package' ]
35 verbose tarball /Users/spair/.npm/txtool/0.1.3/package.tgz
36 verbose folder /var/folders/1k/mp1bh5jj58j_712v86pkcs400000gn/T/npm-9779/1372900575752-0.48015642911195755/package
37 silly lockFile 606bee6c-air-npm-txtool-0-1-3-package-tgz /Users/spair/.npm/txtool/0.1.3/package.tgz
38 verbose lock /Users/spair/.npm/txtool/0.1.3/package.tgz /Users/spair/.npm/606bee6c-air-npm-txtool-0-1-3-package-tgz.lock
39 silly lockFile 606bee6c-air-npm-txtool-0-1-3-package-tgz /Users/spair/.npm/txtool/0.1.3/package.tgz
40 silly lockFile d9a10557-s-spair-npm-txtool-0-1-3-package /Users/spair/.npm/txtool/0.1.3/package
41 verbose lock /Users/spair/.npm/txtool/0.1.3/package /Users/spair/.npm/d9a10557-s-spair-npm-txtool-0-1-3-package.lock
42 silly lockFile d9a10557-s-spair-npm-txtool-0-1-3-package /Users/spair/.npm/txtool/0.1.3/package
43 verbose tar unpack /Users/spair/.npm/txtool/0.1.3/package.tgz
44 silly lockFile d9a10557-s-spair-npm-txtool-0-1-3-package /Users/spair/.npm/txtool/0.1.3/package
45 verbose lock /Users/spair/.npm/txtool/0.1.3/package /Users/spair/.npm/d9a10557-s-spair-npm-txtool-0-1-3-package.lock
46 silly gunzTarPerm modes [ '755', '644' ]
47 silly gunzTarPerm extractEntry package.json
48 silly gunzTarPerm extractEntry .npmignore
49 silly gunzTarPerm extractEntry README
50 silly gunzTarPerm extractEntry bin/txtool
51 silly gunzTarPerm extractEntry examples/multisig.txt
52 silly gunzTarPerm extractEntry examples/tx-signing.txt
53 silly gunzTarPerm extractEntry LICENSE.txt
54 silly gunzTarPerm extractEntry TODO
55 verbose read json /Users/spair/.npm/txtool/0.1.3/package/package.json
56 silly lockFile d9a10557-s-spair-npm-txtool-0-1-3-package /Users/spair/.npm/txtool/0.1.3/package
57 silly shasum updated bytes 6376
58 info shasum 530550ab88bb0cd98c1d4a32d1de78862b1a4ae0
58 info shasum /Users/spair/.npm/txtool/0.1.3/package.tgz
59 verbose from cache /Users/spair/.npm/txtool/0.1.3/package/package.json
60 verbose chmod /Users/spair/.npm/txtool/0.1.3/package.tgz 644
61 verbose chown /Users/spair/.npm/txtool/0.1.3/package.tgz [ 501, 20 ]
62 silly lockFile 3a52ce78- .
63 silly publish { name: 'txtool',
63 silly publish   description: 'Bitcoin Transaction Tool',
63 silly publish   version: '0.1.3',
63 silly publish   author: { name: 'Jeff Garzik', email: 'jgarzik@bitpay.com' },
63 silly publish   contributors: [ { name: 'Stephen Pair', email: 'stephen@bitpay.com' } ],
63 silly publish   main: './index',
63 silly publish   bin: { txtool: './bin/txtool' },
63 silly publish   keywords:
63 silly publish    [ 'bitcoin',
63 silly publish      'btc',
63 silly publish      'satoshi',
63 silly publish      'money',
63 silly publish      'currency',
63 silly publish      'virtual',
63 silly publish      'transactions',
63 silly publish      'multisig' ],
63 silly publish   repository: { type: 'git', url: 'http://github.com/gasteve/txtool.git' },
63 silly publish   scripts: {},
63 silly publish   engines: { node: '>=0.8' },
63 silly publish   dependencies:
63 silly publish    { libbitcoin: '>=0.1.0',
63 silly publish      classtool: '>=1.0.0',
63 silly publish      optimist: '>=0.6.0' },
63 silly publish   devDependencies: {},
63 silly publish   license: 'MIT',
63 silly publish   readme: '\nBuild bitcoin transactions\n--------------------------\nUsage: txtool [options] COMMAND [command parameters]\n\nOptions:\n  -f, --file  Load/store transaction state to/from FILE\n\n\nTheory of operation\n-------------------\nAll operation revolves around an internal database, which is modified\nvia execution of a command operation:\n\t1. txtool reads transaction state file (JSON). Default "txstatedb.json".\n\t2. txtool executes command given on command line,\n\t   updating transaction state.\n\t3. txtool writes transaction state file, overwriting\n\t   previous version.\n\n"transaction state" is anything involving the given transaction being\nbuilt, examined or modified.\n\nA session begins when a new database is initialized, using the "init"\ncommand.\n\n\ntxtool command summary\n----------------------\n\ndump\n\tInspect transaction state database.\n\nhelp\n\tList this command summary.\n\ninit\n\tInitialize new transaction state database.\n\ninputs TXID1 VOUT1 TXID2 VOUT2...\n\tRaw transaction building.  Append to list of TX inputs.\n\ninputs.clear\n\tClear list of TX inputs.\n\nmultisig N-REQUIRED KEY1 KEY2 KEY3...\n\tBegin new multi-sig tx\n\nnreq N-REQUIRED\n\tSpecify number of sigs required for a multisig tx\n\noutputs ADDRESS1 VALUE1 ADDRESS2 VALUE2...\n\tRaw transaction building.  Append to list of TX outputs.\n\noutputs.clear\n\tClear list of TX outputs.\n\npubkey.get ADDRESS\n\n\tRPC: Obtain full pubkey, given bitcoin address (pubkey hash),\n\tfrom bitcoind wallet.\n\npubkeys KEY1 KEY2 KEY3...\n\tAppend to list of pubkeys / bitcoin addresses\n\npubkeys.clear\n\tClear list of pubkeys.\n\nraw SERIALIZED-TX\n\tInput serialized transaction from command line\n\nraw.clear\n\tClear serialized tx data.\n\nraw.create\n\tRPC: create raw transaction, given inputs and outputs.\n\nraw.decode\n\tRPC: decode raw transaction to readable JSON object.\n\nraw.get TXID\n\tRPC: get raw transaction, given hash txid.\n\nraw.read FILE\n\tInput serialized transaction from file.\n\nraw.write FILE\n\tOutput serialized transaction to file.\n\nraw.sign\n\tRPC: sign raw transaction, if possible.\n\tUses keys in bitcoind\'s wallet.\n\nraw.send\n\tRPC: broadcast raw transaction to network,\n\treturning a transaction id.\n\nwallet.msig\n\tCommit in-memory multisig data (N-Required, Keys) to RPC wallet,\n\treturning a multisig payment address.\n\n\nEncryption (walletpassphrase) note\n----------------------------------\nThe user is expected to authenticate with bitcoind RPC prior to using\nthis tool, if this tool will require access to private keys for the\noperation (e.g. signing).\n\n',
63 silly publish   readmeFilename: 'README',
63 silly publish   _id: 'txtool@0.1.3',
63 silly publish   dist: { shasum: '530550ab88bb0cd98c1d4a32d1de78862b1a4ae0' } }
64 verbose url raw txtool
65 verbose url resolving [ 'https://registry.npmjs.org/', './txtool' ]
66 verbose url resolved https://registry.npmjs.org/txtool
67 info trying registry request attempt 1 at 21:16:15
68 http PUT https://registry.npmjs.org/txtool
69 http 409 https://registry.npmjs.org/txtool
70 verbose url raw txtool
71 verbose url resolving [ 'https://registry.npmjs.org/', './txtool' ]
72 verbose url resolved https://registry.npmjs.org/txtool
73 info trying registry request attempt 1 at 21:16:16
74 http GET https://registry.npmjs.org/txtool
75 http 200 https://registry.npmjs.org/txtool
76 error publish fail Cannot publish over existing version.
76 error publish fail Bump the 'version' field, set the --force flag, or
76 error publish fail     npm unpublish 'txtool@0.1.3'
76 error publish fail and try again
77 error System Darwin 12.4.0
78 error command "node" "/usr/local/bin/npm" "publish"
79 error cwd /Users/spair/projects/node_modules/txtool
80 error node -v v0.8.14
81 error npm -v 1.1.65
82 error code EPUBLISHCONFLICT
83 verbose exit [ 1, true ]
